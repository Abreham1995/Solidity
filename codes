//Storage Variables

// SPDX-License-Identifier: MIT
Add two boolean variables
Create two public boolean storage variables on the contract: a and b.

Store true in the variable a and false in the value b.
pragma solidity ^0.8.20;

contract Contract {
    bool public a = true;
    bool public b = false;
}

//Unsigned Integers
Create Unsigned Integers!
Let's create three public storage unsigned integers in our Contract: a, b, and sum.

Define the variable a as an uint8 with an initial value between 0 and 255.

Define the variable b as an uint16 with a value of at least 256.

The variable sum should be a uint256 with the sum of the values stored in a and b.

contract Contract {
   uint8 public a = 34;
   uint16 public b  = 256;
   uint256 public sum = a+b;

}
//Returning Values
//Create an external view function add which takes a uint parameter and returns the sum of the parameter plus the state variable x.
contract Contract {
    uint public x;
   
     
    constructor(uint _x)
    {
        x = _x;
    }
    
    function increment()public
        {
         x+=1;
        }
      
  function add(uint _value) external view returns (uint) {
        return x + _value;
    }

}
